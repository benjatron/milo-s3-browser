{"version":3,"sources":["../../../node_modules/dialog-polyfill/dialog-polyfill.js","../src/main.js"],"names":["createsStackingContext","el","document","body","s","window","getComputedStyle","invalid","k","ok","undefined","opacity","position","webkitOverflowScrolling","parentElement","findNearestDialog","localName","safeBlur","blur","inNodeList","nodeList","node","i","length","isFormMethodDialog","hasAttribute","getAttribute","toLowerCase","dialogPolyfillInfo","dialog","this","dialog_","replacedStyleTop_","openAsModal_","setAttribute","show","bind","showModal","close","returnValue","MutationObserver","maybeHideModal","observe","attributes","attributeFilter","removed","cb","downgradeModal","timeout","delayModel","ev","target","cand","type","substr","clearTimeout","setTimeout","forEach","name","addEventListener","Object","defineProperty","set","setOpen","get","backdrop_","createElement","className","backdropClick_","supportCustomEvent","CustomEvent","_typeof","event","x","createEvent","initCustomEvent","bubbles","cancelable","detail","prototype","Event","contains","style","zIndex","top","parentNode","removeChild","dialogPolyfill","dm","removeDialog","value","removeAttribute","e","focus","fake","insertBefore","firstChild","tabIndex","redirectedEvent","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","dispatchEvent","stopPropagation","focus_","querySelector","opts","query","map","push","join","activeElement","updateZIndex","dialogZ","backdropZ","Error","open","pushDialog","console","warn","needsCentering","reposition","nextSibling","opt_returnValue","closeEvent","element","scrollTop","documentElement","topValue","innerHeight","offsetHeight","Math","max","isInlinePositionSetByStylesheet","styleSheets","styleSheet","cssRules","j","rule","selectedNodes","querySelectorAll","selectorText","cssTop","getPropertyValue","cssBottom","bottom","forceRegisterDialog","HTMLDialogElement","registerDialog","DialogManager","pendingDialogStack","checkDOM","checkDOM_","overlay","forwardTab_","handleKey_","handleFocus_","zIndexLow_","zIndexHigh_","mo_","records","rec","c","removedNodes","Element","concat","blockDocument","childList","subtree","unblockDocument","removeEventListener","disconnect","updateStacking","dpi","last","appendChild","containedByTopDialog_","candidate","preventDefault","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","keyCode","cancelEvent","slice","indexOf","allowed","unshift","index","splice","formSubmitter","useValue","replacementFormSubmit","nativeFormSubmit","call","testForm","method","methodDescriptor","getOwnPropertyDescriptor","HTMLFormElement","realGet","realSet","v","defaultPrevented","form","offsetX","offsetY","submit","define","module","jQuery","ready","addClass","slideToggle","removeClass","navigator","userAgent","includes","click","getElementById","location","href","$id","split","attr","parent","find","toggleClass","siblings","hover","children","is"],"mappings":"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","file":"main.min.js","sourcesContent":["(function() {\n\n  // nb. This is for IE10 and lower _only_.\n  var supportCustomEvent = window.CustomEvent;\n  if (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n    supportCustomEvent = function CustomEvent(event, x) {\n      x = x || {};\n      var ev = document.createEvent('CustomEvent');\n      ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n      return ev;\n    };\n    supportCustomEvent.prototype = window.Event.prototype;\n  }\n\n  /**\n   * @param {Element} el to check for stacking context\n   * @return {boolean} whether this el or its parents creates a stacking context\n   */\n  function createsStackingContext(el) {\n    while (el && el !== document.body) {\n      var s = window.getComputedStyle(el);\n      var invalid = function(k, ok) {\n        return !(s[k] === undefined || s[k] === ok);\n      }\n      if (s.opacity < 1 ||\n          invalid('zIndex', 'auto') ||\n          invalid('transform', 'none') ||\n          invalid('mixBlendMode', 'normal') ||\n          invalid('filter', 'none') ||\n          invalid('perspective', 'none') ||\n          s['isolation'] === 'isolate' ||\n          s.position === 'fixed' ||\n          s.webkitOverflowScrolling === 'touch') {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n\n  /**\n   * Finds the nearest <dialog> from the passed element.\n   *\n   * @param {Element} el to search from\n   * @return {HTMLDialogElement} dialog found\n   */\n  function findNearestDialog(el) {\n    while (el) {\n      if (el.localName === 'dialog') {\n        return /** @type {HTMLDialogElement} */ (el);\n      }\n      el = el.parentElement;\n    }\n    return null;\n  }\n\n  /**\n   * Blur the specified element, as long as it's not the HTML body element.\n   * This works around an IE9/10 bug - blurring the body causes Windows to\n   * blur the whole application.\n   *\n   * @param {Element} el to blur\n   */\n  function safeBlur(el) {\n    if (el && el.blur && el !== document.body) {\n      el.blur();\n    }\n  }\n\n  /**\n   * @param {!NodeList} nodeList to search\n   * @param {Node} node to find\n   * @return {boolean} whether node is inside nodeList\n   */\n  function inNodeList(nodeList, node) {\n    for (var i = 0; i < nodeList.length; ++i) {\n      if (nodeList[i] === node) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLFormElement} el to check\n   * @return {boolean} whether this form has method=\"dialog\"\n   */\n  function isFormMethodDialog(el) {\n    if (!el || !el.hasAttribute('method')) {\n      return false;\n    }\n    return el.getAttribute('method').toLowerCase() === 'dialog';\n  }\n\n  /**\n   * @param {!HTMLDialogElement} dialog to upgrade\n   * @constructor\n   */\n  function dialogPolyfillInfo(dialog) {\n    this.dialog_ = dialog;\n    this.replacedStyleTop_ = false;\n    this.openAsModal_ = false;\n\n    // Set a11y role. Browsers that support dialog implicitly know this already.\n    if (!dialog.hasAttribute('role')) {\n      dialog.setAttribute('role', 'dialog');\n    }\n\n    dialog.show = this.show.bind(this);\n    dialog.showModal = this.showModal.bind(this);\n    dialog.close = this.close.bind(this);\n\n    if (!('returnValue' in dialog)) {\n      dialog.returnValue = '';\n    }\n\n    if ('MutationObserver' in window) {\n      var mo = new MutationObserver(this.maybeHideModal.bind(this));\n      mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n    } else {\n      // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n      // seem to fire even if the element was removed as part of a parent removal. Use the removed\n      // events to force downgrade (useful if removed/immediately added).\n      var removed = false;\n      var cb = function() {\n        removed ? this.downgradeModal() : this.maybeHideModal();\n        removed = false;\n      }.bind(this);\n      var timeout;\n      var delayModel = function(ev) {\n        if (ev.target !== dialog) { return; }  // not for a child element\n        var cand = 'DOMNodeRemoved';\n        removed |= (ev.type.substr(0, cand.length) === cand);\n        window.clearTimeout(timeout);\n        timeout = window.setTimeout(cb, 0);\n      };\n      ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n        dialog.addEventListener(name, delayModel);\n      });\n    }\n    // Note that the DOM is observed inside DialogManager while any dialog\n    // is being displayed as a modal, to catch modal removal from the DOM.\n\n    Object.defineProperty(dialog, 'open', {\n      set: this.setOpen.bind(this),\n      get: dialog.hasAttribute.bind(dialog, 'open')\n    });\n\n    this.backdrop_ = document.createElement('div');\n    this.backdrop_.className = 'backdrop';\n    this.backdrop_.addEventListener('click', this.backdropClick_.bind(this));\n  }\n\n  dialogPolyfillInfo.prototype = {\n\n    get dialog() {\n      return this.dialog_;\n    },\n\n    /**\n     * Maybe remove this dialog from the modal top layer. This is called when\n     * a modal dialog may no longer be tenable, e.g., when the dialog is no\n     * longer open or is no longer part of the DOM.\n     */\n    maybeHideModal: function() {\n      if (this.dialog_.hasAttribute('open') && document.body.contains(this.dialog_)) { return; }\n      this.downgradeModal();\n    },\n\n    /**\n     * Remove this dialog from the modal top layer, leaving it as a non-modal.\n     */\n    downgradeModal: function() {\n      if (!this.openAsModal_) { return; }\n      this.openAsModal_ = false;\n      this.dialog_.style.zIndex = '';\n\n      // This won't match the native <dialog> exactly because if the user set top on a centered\n      // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n      // possible to polyfill this perfectly.\n      if (this.replacedStyleTop_) {\n        this.dialog_.style.top = '';\n        this.replacedStyleTop_ = false;\n      }\n\n      // Clear the backdrop and remove from the manager.\n      this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n      dialogPolyfill.dm.removeDialog(this);\n    },\n\n    /**\n     * @param {boolean} value whether to open or close this dialog\n     */\n    setOpen: function(value) {\n      if (value) {\n        this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n      } else {\n        this.dialog_.removeAttribute('open');\n        this.maybeHideModal();  // nb. redundant with MutationObserver\n      }\n    },\n\n    /**\n     * Handles clicks on the fake .backdrop element, redirecting them as if\n     * they were on the dialog itself.\n     *\n     * @param {!Event} e to redirect\n     */\n    backdropClick_: function(e) {\n      if (!this.dialog_.hasAttribute('tabindex')) {\n        // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n        // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n        // would not be needed - clicks would move the implicit cursor there.\n        var fake = document.createElement('div');\n        this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n        fake.tabIndex = -1;\n        fake.focus();\n        this.dialog_.removeChild(fake);\n      } else {\n        this.dialog_.focus();\n      }\n\n      var redirectedEvent = document.createEvent('MouseEvents');\n      redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n          e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n          e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n      this.dialog_.dispatchEvent(redirectedEvent);\n      e.stopPropagation();\n    },\n\n    /**\n     * Focuses on the first focusable element within the dialog. This will always blur the current\n     * focus, even if nothing within the dialog is found.\n     */\n    focus_: function() {\n      // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n      var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n      if (!target && this.dialog_.tabIndex >= 0) {\n        target = this.dialog_;\n      }\n      if (!target) {\n        // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n        // alternative involves stepping through and trying to focus everything.\n        var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n        var query = opts.map(function(el) {\n          return el + ':not([disabled])';\n        });\n        // TODO(samthor): tabindex values that are not numeric are not focusable.\n        query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n        target = this.dialog_.querySelector(query.join(', '));\n      }\n      safeBlur(document.activeElement);\n      target && target.focus();\n    },\n\n    /**\n     * Sets the zIndex for the backdrop and dialog.\n     *\n     * @param {number} dialogZ\n     * @param {number} backdropZ\n     */\n    updateZIndex: function(dialogZ, backdropZ) {\n      if (dialogZ < backdropZ) {\n        throw new Error('dialogZ should never be < backdropZ');\n      }\n      this.dialog_.style.zIndex = dialogZ;\n      this.backdrop_.style.zIndex = backdropZ;\n    },\n\n    /**\n     * Shows the dialog. If the dialog is already open, this does nothing.\n     */\n    show: function() {\n      if (!this.dialog_.open) {\n        this.setOpen(true);\n        this.focus_();\n      }\n    },\n\n    /**\n     * Show this dialog modally.\n     */\n    showModal: function() {\n      if (this.dialog_.hasAttribute('open')) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n      }\n      if (!document.body.contains(this.dialog_)) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n      }\n      if (!dialogPolyfill.dm.pushDialog(this)) {\n        throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n      }\n\n      if (createsStackingContext(this.dialog_.parentElement)) {\n        console.warn('A dialog is being shown inside a stacking context. ' +\n            'This may cause it to be unusable. For more information, see this link: ' +\n            'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n      }\n\n      this.setOpen(true);\n      this.openAsModal_ = true;\n\n      // Optionally center vertically, relative to the current viewport.\n      if (dialogPolyfill.needsCentering(this.dialog_)) {\n        dialogPolyfill.reposition(this.dialog_);\n        this.replacedStyleTop_ = true;\n      } else {\n        this.replacedStyleTop_ = false;\n      }\n\n      // Insert backdrop.\n      this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n      // Focus on whatever inside the dialog.\n      this.focus_();\n    },\n\n    /**\n     * Closes this HTMLDialogElement. This is optional vs clearing the open\n     * attribute, however this fires a 'close' event.\n     *\n     * @param {string=} opt_returnValue to use as the returnValue\n     */\n    close: function(opt_returnValue) {\n      if (!this.dialog_.hasAttribute('open')) {\n        throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n      }\n      this.setOpen(false);\n\n      // Leave returnValue untouched in case it was set directly on the element\n      if (opt_returnValue !== undefined) {\n        this.dialog_.returnValue = opt_returnValue;\n      }\n\n      // Triggering \"close\" event for any attached listeners on the <dialog>.\n      var closeEvent = new supportCustomEvent('close', {\n        bubbles: false,\n        cancelable: false\n      });\n      this.dialog_.dispatchEvent(closeEvent);\n    }\n\n  };\n\n  var dialogPolyfill = {};\n\n  dialogPolyfill.reposition = function(element) {\n    var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n    element.style.top = Math.max(scrollTop, topValue) + 'px';\n  };\n\n  dialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n    for (var i = 0; i < document.styleSheets.length; ++i) {\n      var styleSheet = document.styleSheets[i];\n      var cssRules = null;\n      // Some browsers throw on cssRules.\n      try {\n        cssRules = styleSheet.cssRules;\n      } catch (e) {}\n      if (!cssRules) { continue; }\n      for (var j = 0; j < cssRules.length; ++j) {\n        var rule = cssRules[j];\n        var selectedNodes = null;\n        // Ignore errors on invalid selector texts.\n        try {\n          selectedNodes = document.querySelectorAll(rule.selectorText);\n        } catch(e) {}\n        if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n          continue;\n        }\n        var cssTop = rule.style.getPropertyValue('top');\n        var cssBottom = rule.style.getPropertyValue('bottom');\n        if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  dialogPolyfill.needsCentering = function(dialog) {\n    var computedStyle = window.getComputedStyle(dialog);\n    if (computedStyle.position !== 'absolute') {\n      return false;\n    }\n\n    // We must determine whether the top/bottom specified value is non-auto.  In\n    // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n    // Firefox returns the used value. So we do this crazy thing instead: check\n    // the inline style and then go through CSS rules.\n    if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n        (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n      return false;\n    }\n    return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n  };\n\n  /**\n   * @param {!Element} element to force upgrade\n   */\n  dialogPolyfill.forceRegisterDialog = function(element) {\n    if (window.HTMLDialogElement || element.showModal) {\n      console.warn('This browser already supports <dialog>, the polyfill ' +\n          'may not work correctly', element);\n    }\n    if (element.localName !== 'dialog') {\n      throw new Error('Failed to register dialog: The element is not a dialog.');\n    }\n    new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n  };\n\n  /**\n   * @param {!Element} element to upgrade, if necessary\n   */\n  dialogPolyfill.registerDialog = function(element) {\n    if (!element.showModal) {\n      dialogPolyfill.forceRegisterDialog(element);\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  dialogPolyfill.DialogManager = function() {\n    /** @type {!Array<!dialogPolyfillInfo>} */\n    this.pendingDialogStack = [];\n\n    var checkDOM = this.checkDOM_.bind(this);\n\n    // The overlay is used to simulate how a modal dialog blocks the document.\n    // The blocking dialog is positioned on top of the overlay, and the rest of\n    // the dialogs on the pending dialog stack are positioned below it. In the\n    // actual implementation, the modal dialog stacking is controlled by the\n    // top layer, where z-index has no effect.\n    this.overlay = document.createElement('div');\n    this.overlay.className = '_dialog_overlay';\n    this.overlay.addEventListener('click', function(e) {\n      this.forwardTab_ = undefined;\n      e.stopPropagation();\n      checkDOM([]);  // sanity-check DOM\n    }.bind(this));\n\n    this.handleKey_ = this.handleKey_.bind(this);\n    this.handleFocus_ = this.handleFocus_.bind(this);\n\n    this.zIndexLow_ = 100000;\n    this.zIndexHigh_ = 100000 + 150;\n\n    this.forwardTab_ = undefined;\n\n    if ('MutationObserver' in window) {\n      this.mo_ = new MutationObserver(function(records) {\n        var removed = [];\n        records.forEach(function(rec) {\n          for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n            if (!(c instanceof Element)) {\n              continue;\n            } else if (c.localName === 'dialog') {\n              removed.push(c);\n            }\n            removed = removed.concat(c.querySelectorAll('dialog'));\n          }\n        });\n        removed.length && checkDOM(removed);\n      });\n    }\n  };\n\n  /**\n   * Called on the first modal dialog being shown. Adds the overlay and related\n   * handlers.\n   */\n  dialogPolyfill.DialogManager.prototype.blockDocument = function() {\n    document.documentElement.addEventListener('focus', this.handleFocus_, true);\n    document.addEventListener('keydown', this.handleKey_);\n    this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n  };\n\n  /**\n   * Called on the first modal dialog being removed, i.e., when no more modal\n   * dialogs are visible.\n   */\n  dialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n    document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n    document.removeEventListener('keydown', this.handleKey_);\n    this.mo_ && this.mo_.disconnect();\n  };\n\n  /**\n   * Updates the stacking of all known dialogs.\n   */\n  dialogPolyfill.DialogManager.prototype.updateStacking = function() {\n    var zIndex = this.zIndexHigh_;\n\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      dpi.updateZIndex(--zIndex, --zIndex);\n      if (i === 0) {\n        this.overlay.style.zIndex = --zIndex;\n      }\n    }\n\n    // Make the overlay a sibling of the dialog itself.\n    var last = this.pendingDialogStack[0];\n    if (last) {\n      var p = last.dialog.parentNode || document.body;\n      p.appendChild(this.overlay);\n    } else if (this.overlay.parentNode) {\n      this.overlay.parentNode.removeChild(this.overlay);\n    }\n  };\n\n  /**\n   * @param {Element} candidate to check if contained or is the top-most modal dialog\n   * @return {boolean} whether candidate is contained in top dialog\n   */\n  dialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n    while (candidate = findNearestDialog(candidate)) {\n      for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n        if (dpi.dialog === candidate) {\n          return i === 0;  // only valid if top-most\n        }\n      }\n      candidate = candidate.parentElement;\n    }\n    return false;\n  };\n\n  dialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n    if (this.containedByTopDialog_(event.target)) { return; }\n\n    event.preventDefault();\n    event.stopPropagation();\n    safeBlur(/** @type {Element} */ (event.target));\n\n    if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n    var dpi = this.pendingDialogStack[0];\n    var dialog = dpi.dialog;\n    var position = dialog.compareDocumentPosition(event.target);\n    if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n      if (this.forwardTab_) {  // forward\n        dpi.focus_();\n      } else {  // backwards\n        document.documentElement.focus();\n      }\n    } else {\n      // TODO: Focus after the dialog, is ignored.\n    }\n\n    return false;\n  };\n\n  dialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n    this.forwardTab_ = undefined;\n    if (event.keyCode === 27) {\n      event.preventDefault();\n      event.stopPropagation();\n      var cancelEvent = new supportCustomEvent('cancel', {\n        bubbles: false,\n        cancelable: true\n      });\n      var dpi = this.pendingDialogStack[0];\n      if (dpi && dpi.dialog.dispatchEvent(cancelEvent)) {\n        dpi.dialog.close();\n      }\n    } else if (event.keyCode === 9) {\n      this.forwardTab_ = !event.shiftKey;\n    }\n  };\n\n  /**\n   * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n   * removed and immediately readded don't stay modal, they become normal.\n   *\n   * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n   */\n  dialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n    // This operates on a clone because it may cause it to change. Each change also calls\n    // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n    // at a time?!\n    var clone = this.pendingDialogStack.slice();\n    clone.forEach(function(dpi) {\n      if (removed.indexOf(dpi.dialog) !== -1) {\n        dpi.downgradeModal();\n      } else {\n        dpi.maybeHideModal();\n      }\n    });\n  };\n\n  /**\n   * @param {!dialogPolyfillInfo} dpi\n   * @return {boolean} whether the dialog was allowed\n   */\n  dialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n    var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n    if (this.pendingDialogStack.length >= allowed) {\n      return false;\n    }\n    if (this.pendingDialogStack.unshift(dpi) === 1) {\n      this.blockDocument();\n    }\n    this.updateStacking();\n    return true;\n  };\n\n  /**\n   * @param {!dialogPolyfillInfo} dpi\n   */\n  dialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n    var index = this.pendingDialogStack.indexOf(dpi);\n    if (index === -1) { return; }\n\n    this.pendingDialogStack.splice(index, 1);\n    if (this.pendingDialogStack.length === 0) {\n      this.unblockDocument();\n    }\n    this.updateStacking();\n  };\n\n  dialogPolyfill.dm = new dialogPolyfill.DialogManager();\n  dialogPolyfill.formSubmitter = null;\n  dialogPolyfill.useValue = null;\n\n  /**\n   * Installs global handlers, such as click listers and native method overrides. These are needed\n   * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n   */\n  if (window.HTMLDialogElement === undefined) {\n\n    /**\n     * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n     * one that returns the correct value.\n     */\n    var testForm = document.createElement('form');\n    testForm.setAttribute('method', 'dialog');\n    if (testForm.method !== 'dialog') {\n      var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n      if (methodDescriptor) {\n        // TODO: older iOS and older PhantomJS fail to return the descriptor here\n        var realGet = methodDescriptor.get;\n        methodDescriptor.get = function() {\n          if (isFormMethodDialog(this)) {\n            return 'dialog';\n          }\n          return realGet.call(this);\n        };\n        var realSet = methodDescriptor.set;\n        methodDescriptor.set = function(v) {\n          if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n            return this.setAttribute('method', v);\n          }\n          return realSet.call(this, v);\n        };\n        Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n      }\n    }\n\n    /**\n     * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n     * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n     * document.activeElement.\n     */\n    document.addEventListener('click', function(ev) {\n      dialogPolyfill.formSubmitter = null;\n      dialogPolyfill.useValue = null;\n      if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n      var target = /** @type {Element} */ (ev.target);\n      if (!target || !isFormMethodDialog(target.form)) { return; }\n\n      var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n      if (!valid) {\n        if (!(target.localName === 'input' && target.type === 'image')) { return; }\n        // this is a <input type=\"image\">, which can submit forms\n        dialogPolyfill.useValue = ev.offsetX + ',' + ev.offsetY;\n      }\n\n      var dialog = findNearestDialog(target);\n      if (!dialog) { return; }\n\n      dialogPolyfill.formSubmitter = target;\n    }, false);\n\n    /**\n     * Replace the native HTMLFormElement.submit() method, as it won't fire the\n     * submit event and give us a chance to respond.\n     */\n    var nativeFormSubmit = HTMLFormElement.prototype.submit;\n    function replacementFormSubmit() {\n      if (!isFormMethodDialog(this)) {\n        return nativeFormSubmit.call(this);\n      }\n      var dialog = findNearestDialog(this);\n      dialog && dialog.close();\n    }\n    HTMLFormElement.prototype.submit = replacementFormSubmit;\n\n    /**\n     * Global form 'dialog' method handler. Closes a dialog correctly on submit\n     * and possibly sets its return value.\n     */\n    document.addEventListener('submit', function(ev) {\n      var form = /** @type {HTMLFormElement} */ (ev.target);\n      if (!isFormMethodDialog(form)) { return; }\n      ev.preventDefault();\n\n      var dialog = findNearestDialog(form);\n      if (!dialog) { return; }\n\n      // Forms can only be submitted via .submit() or a click (?), but anyway: sanity-check that\n      // the submitter is correct before using its value as .returnValue.\n      var s = dialogPolyfill.formSubmitter;\n      if (s && s.form === form) {\n        dialog.close(dialogPolyfill.useValue || s.value);\n      } else {\n        dialog.close();\n      }\n      dialogPolyfill.formSubmitter = null;\n    }, true);\n  }\n\n  dialogPolyfill['forceRegisterDialog'] = dialogPolyfill.forceRegisterDialog;\n  dialogPolyfill['registerDialog'] = dialogPolyfill.registerDialog;\n\n  if (typeof define === 'function' && 'amd' in define) {\n    // AMD support\n    define(function() { return dialogPolyfill; });\n  } else if (typeof module === 'object' && typeof module['exports'] === 'object') {\n    // CommonJS support\n    module['exports'] = dialogPolyfill;\n  } else {\n    // all others\n    window['dialogPolyfill'] = dialogPolyfill;\n  }\n})();\n","// @codekit-prepend \"../../../../milo-s3-browser/node_modules/dialog-polyfill/dialog-polyfill.js\";\n\n// Scripts for the MILO S3 browser\njQuery(document).ready(function() {\n  // Process dialog elements\n  const dialog = document.querySelectorAll('dialog');\n  dialog.forEach(function(element) {\n    dialogPolyfill.registerDialog(element);\n  });\n\n  // Applies preload changes\n  jQuery('.m-fileList.--preload').addClass('--is-collapsed').slideToggle(0).removeClass('--preload');\n  jQuery('.a-browserDescription__body').slideToggle(0).removeClass('--preload');\n\n  // If the user is on IE, show IE-related disclosures\n  if( navigator.userAgent.includes('MSIE') ){\n    jQuery('#milo-sidebar-ie').removeClass('--hidden');\n    jQuery('.m-downloadDialog__ieDisclosure').removeClass('--is-hidden');\n    jQuery('.o-fileLanding__ieDisclosure').removeClass('--is-hidden');\n  }\n\n  // Login modal toggles\n  jQuery('.o-browserLogin__link').click(function() {\n    document.getElementById('milo-login-modal').showModal();\n  });\n  jQuery('.a-loginModal__close').click(function() {\n    document.getElementById('milo-login-modal').close();\n  });\n\n  // If a download modal is in the url, open it\n  if( window.location.href.indexOf('#download-') > 0 ) {\n    let $id = window.location.href.split('#');\n    document.getElementById($id[1]).showModal();\n  }\n\n  // Download modal toggling\n  jQuery('.a-browserItem__text--title').click(function() {\n    let $id = \"\".concat( 'download-', jQuery(this).attr('href').split('-').slice(1,2) );\n    document.getElementById($id).showModal();\n  });\n  jQuery('.a-browserButton').click(function() {\n    let $id = \"\".concat( 'download-', jQuery(this).attr('href').split('-').slice(1,2) );\n    document.getElementById($id).showModal();\n  });\n  jQuery('.m-downloadDialog__close').click(function() {\n    let $id = jQuery(this).parent().attr('id');\n    document.getElementById($id).close();\n  });\n\n  // Controls the opening and closing of the folder icon\n  jQuery('.a-fileFolder').click(function() {\n    jQuery(this).find('.a-fileFolder__icon').toggleClass('--is-hidden');\n    jQuery(this).siblings('.m-fileList').toggleClass('--is-clicked').slideToggle();\n  });\n\n  // Controls hover behavior for individual files\n  jQuery('.a-browserItem').hover(\n    function() {\n      jQuery(this).children('.a-browserItem__icon').addClass('--is-hovered');\n      jQuery(this).children('.a-browserItem__text').addClass('--is-hovered');\n      jQuery(this).children('.a-browserItem__text').children('.a-browserItem__text--title').addClass('--is-hovered');\n      jQuery(this).siblings('.a-browserButton').children('.a-browserButton__link').addClass('--is-hovered');\n    },\n    function() {\n      jQuery(this).children('.a-browserItem__icon').removeClass('--is-hovered');\n      jQuery(this).children('.a-browserItem__text').removeClass('--is-hovered');\n      jQuery(this).children('.a-browserItem__text').children('.a-browserItem__text--title').removeClass('--is-hovered');\n      jQuery(this).siblings('.a-browserButton').children('.a-browserButton__link').removeClass('--is-hovered');\n    }\n  );\n  jQuery('.a-browserButton').hover(\n    function() {\n      jQuery(this).children('.a-browserButton__link').addClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').addClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').children('.a-browserItem__icon').addClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').children('.a-browserItem__text').addClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').children('.a-browserItem__text').children('.a-browserItem__text--title').addClass('--is-hovered');\n    },\n    function() {\n      jQuery(this).children('.a-browserButton__link').removeClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').removeClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').children('.a-browserItem__icon').removeClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').children('.a-browserItem__text').removeClass('--is-hovered');\n      jQuery(this).siblings('.a-browserItem').children('.a-browserItem__text').children('.a-browserItem__text--title').removeClass('--is-hovered');\n    }\n  );\n\n  // Controls the toggling of item descriptions\n  jQuery('.a-browserDescription__toggle').click(function() {\n    jQuery(this).toggleClass('--is-toggled');\n    jQuery(this).siblings('.a-browserDescription__body').slideToggle();\n  });\n  jQuery('.a-browserDescription__title').click(function() {\n    jQuery(this).siblings('.a-browserDescription__toggle').toggleClass('--is-toggled');\n    jQuery(this).siblings('.a-browserDescription__body').slideToggle();\n  });\n\n  // Controls the ability to submit the password form\n  jQuery('.m-browserForm__checkbox').click(function() {\n    if( jQuery(this).is(':checked') ){\n      jQuery(this).siblings('.m-browserForm__button').removeClass('--inactive');\n    }\n    else {\n      jQuery(this).siblings('.m-browserForm__button').addClass('--inactive');\n    }\n  });\n});"]}